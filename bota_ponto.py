#text ='.( [({("Identifier" ["[" "Integer-Number" "]"]) "="} ((({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))}) {"|" (({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))})}))] ";") | ("{" {(("float" | "int" | "string" | "void" | "bool" | "char") (("Identifier" ["[" "Integer-Number" "]"]) {"," ("Identifier" ["[" "Integer-Number" "]"])}) | ("float" | "int" | "string" | "void" | "bool" | "char") "[" "]" (("Identifier" ["[" "Integer-Number" "]"]) {"," ("Identifier" ["[" "Integer-Number" "]"])}) ";")} {statement} "}") | ("if" "(" ({("Identifier" ["[" "Integer-Number" "]"]) "="} ((({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))}) {"|" (({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))})})) ")" statement ["else" statement]) | ("while" "(" ({("Identifier" ["[" "Integer-Number" "]"]) "="} ((({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))}) {"|" (({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))})})) ")" statement) | ("return" [({("Identifier" ["[" "Integer-Number" "]"]) "="} ((({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))}) {"|" (({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})])) {"&" ({"!"} ( ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})}) [("=" | ">" | ">=" | "<" | "<=" | "==" | "!=" | "#") ((({"-"} factor) {("*" | "/") ({"-"} factor)}) {("+" | "-") (({"-"} factor) {("*" | "/") ({"-"} factor)})})]))})}))] ";") | ("break" ";")'
text=' (("a" "b") ("c"|A("a" |"b")))|["a"|"b"]{"b""c"|A|B}'
text = text.replace(" ","")

aspas = False
while text[-1]!='.':
   
    for idx, item in enumerate(text):
        if idx==0 and text[idx]!='.':
            text =  '.' + text[idx:]
        if idx == len(text)-1:
            text = text[:idx+1] + '.'
            break
        if text[idx]=='"':
            aspas= not aspas
        if text[idx]=='.' or text[idx+1]=='.':
            continue
        if not aspas:
            if ord(text[idx])>= ord('a') and ord(text[idx]) <= ord('z'):
                if ord(text[idx+1])>= ord('a') and ord(text[idx+1]) <= ord('z'):
                    continue
            text = text[:idx+1] + '.' + text[idx + 1:]
            break

print(text)